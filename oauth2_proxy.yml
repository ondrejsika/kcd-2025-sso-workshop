apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: oauth2-proxy
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  destination:
    namespace: oauth2-proxy
    server: https://kubernetes.default.svc
  project: default
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true
  source:
    repoURL: https://oauth2-proxy.github.io/manifests
    targetRevision: 6.10.1
    chart: oauth2-proxy
    helm:
      valuesObject:
        # https://github.com/oauth2-proxy/manifests/blob/main/helm/oauth2-proxy/values.yaml
        config:
          clientID: "kubernetes"
          clientSecret: "kubernetes_secret"
          # openssl rand -base64 32 | head -c 32 | base64
          cookieSecret: "TUU5RTAwc3YvZEk4Zi9jRWdUSnhtblNlUVVIcGR4NzA="
          configFile: |-
            email_domains=["*"]
            cookie_secure="false"
            cookie_domains=[".lab0.sikademo.com", ".sikademo.com"]
            whitelist_domains=["lab0.sikademo.com", "sikademo.com"]
            redirect_url="https://oauth2-proxy.lab0.sikademo.com/oauth2/callback"
            oidc_issuer_url="https://sso.lab0.sikademo.com/realms/kcd"
            provider="keycloak-oidc"
            provider_display_name="KCD SSO"
            # allowed_roles=["aaa"]
        ingress:
          enabled: true
          className: nginx
          path: /
          hosts:
            - oauth2-proxy.lab0.sikademo.com
          annotations:
            cert-manager.io/cluster-issuer: letsencrypt
            nginx.ingress.kubernetes.io/proxy-body-size: 512m
            nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
          tls:
            - secretName: oauth2-proxy.lab0.sikademo.com-tls
              hosts:
                - oauth2-proxy.lab0.sikademo.com
